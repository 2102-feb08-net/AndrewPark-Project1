# a pipeline is a set of stuff that will run to implement continuous integration
# build, test, anything to automatically check the quality of the code
# + package/publish it | deploy to some server like azure app service

# every pipeline has a set of conditions deciding when it will activate
# here it will run on every push to main branch specifically
trigger:
  - master

# set requirements for the build agent that will run the stuff
# here ubuntu (latest version) virtual machine
pool:
  vmImage: ubuntu-latest

# set variables, referenced with $() syntax
variables:
  buildConfiguration: 'Release'

# the steps to follow, here we have one script step, a command run in bash
# starting from the root folder of the repository
steps:
- task: SonarCloudPrepare@1
  displayName: sonar prepare analysis
  inputs:
    SonarCloud: 'sonarcloud-modem428'
    organization: '2102-feb08-net'
    scannerMode: 'MSBuild'
    projectKey: '2102-feb08-net_AndrewPark-Project1'
    projectName: 'Storefront'
    extraProperties: 'sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
  workingDirectory: StoreApp

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) --collect "xplat code coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover'
    workingDirectory: 'StoreApp/Storefront.Test'

- task: SonarCloudAnalyze@1
  displayName: sonar run analysis

- task: SonarCloudPublish@1
  displayName: publish sonar quality gate
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(3108cf2f-4c35-4864-8dad-b97042f1dd42)'
    appType: 'webApp'
    WebAppName: '2102-andrewp-storefront'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
